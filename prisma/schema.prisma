// This is your Prisma schema file,
// learn more about it in the docs  https //pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate  https //pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rights {
  X 
  WE 
  IB 
  AZ 
  IN 
  WP 
  ZK 
  PO 
  IW
}
enum Country {
  AF 
  DAX  
  AL  
  DZ  
  AS  
  AD  
  AO  
  AI  
  AQ  
  AG  
  AR  
  AM  
  AW  
  AU  
  AT  
  AZ  
  BS  
  BH  
  BD  
  BB  
  BY  
  BE  
  BZ  
  BJ  
  BM  
  BT  
  BO  
  BQ  
  BA  
  BW  
  BV  
  BR  
  IO  
  BN  
  BG  
  BF  
  BI  
  CV  
  KH  
  CM  
  CA  
  KY  
  CF  
  TD  
  CL  
  CN  
  CX  
  CC  
  CO  
  KM  
  CG  
  CD  
  CK  
  CR  
  CI  
  HR  
  CU  
  CW  
  CY  
  CZ  
  DK  
  DJ  
  DM  
  DO  
  EC  
  EG  
  SV  
  GQ  
  ER  
  EE  
  SZ  
  ET  
  FK  
  FO  
  FJ  
  FI  
  FR  
  GF  
  PF  
  TF  
  GA  
  GM  
  GE  
  DE  
  GH  
  GI  
  GR  
  GL  
  GD  
  GP  
  GU  
  GT  
  GG  
  GN  
  GW  
  GY  
  HT  
  HM  
  VA  
  HN  
  HK  
  HU  
  IS  
  IN  
  ID  
  IR  
  IQ  
  IE  
  IM  
  IL  
  IT  
  JM  
  JP  
  JE  
  JO  
  KZ  
  KE  
  KI  
  KW  
  KG  
  LA  
  LV  
  LB  
  LS  
  LR  
  LY  
  LI  
  LT  
  LU  
  MO  
  MK  
  MG  
  MW  
  MY  
  MV  
  ML  
  MT  
  MH  
  MQ  
  MR  
  MU  
  YT  
  MX  
  FM  
  MD  
  MC  
  MN  
  ME  
  MS  
  MA  
  MZ  
  MM  
  NA  
  NR  
  NP  
  NL  
  NC  
  NZ  
  NI  
  NE  
  NG  
  NU  
  NF  
  KP  
  MP  
  NO  
  OM  
  PK  
  PW  
  PS  
  PA  
  PG  
  PY  
  PE  
  PH  
  PN  
  PL  
  PT  
  PR  
  QA  
  RE  
  RO  
  RU  
  RW  
  BL  
  SH  
  KN  
  LC  
  MF  
  PM  
  VC  
  WS  
  SM  
  ST  
  SA  
  SN  
  RS  
  SC  
  SL  
  SG  
  SX  
  SK  
  SI  
  SB  
  SO  
  ZA  
  GS  
  KR  
  SS  
  ES  
  LK  
  SD  
  SR  
  SJ  
  SE  
  CH  
  SY  
  TW  
  TJ  
  TZ  
  TH  
  TL  
  TG  
  TK  
  TO  
  TT  
  TN  
  TR  
  TM  
  TC  
  TV  
  UG  
  UA  
  AE  
  GB  
  UM  
  US  
  UY  
  UZ  
  VU  
  VE  
  VN  
  VG  
  VI  
  WF  
  EH  
  YE  
  ZM  
  ZW
}

enum IndentityType {
  passport 
  residence_card 
  id_card 
  ekuz 
  foreign_national_id 
  foreign_driver_license 
  others 
  none 
  nn 
  nw
}
enum Role {
  ADMIN 
  DOCTOR 
  PATIENT 
  RECEPTIONIST
}
model Address {
  id              Int @id @unique
  country         Country @default(PL)
  street          String?
  street_number   String?
  flat_number     String?
  postal_code     String?
  city            String?
  province        String?
  registerUsersFk User[] @relation("registrationAddressFk")
  recidentUsersFk User[] @relation("recidenceAddressFk")
}
model User {
  pesel                 String @db.VarChar(12) @id @unique
  telephone             String
  email                 String?
  id                    Int? 
  name                  String?
  surname               String?
  second_telephone      String?   
  date_of_birth         String?
  sex                   String? @db.VarChar(12)
  identity_type         IndentityType?
  identity_num          String? @db.VarChar(80)
  country               Country? @default(PL)
  supervisor            Int?
  nfz                   String? @db.VarChar(2) @default("X")
  rights                Rights? @default(X)
  second_name           String?
  maiden_name           String?
  place_of_birth        String?
  internal_card_id      String?
  blood_type            String?
  teryt                 Int?
  active                Boolean? @default(false)
  zipcode               String @db.VarChar(10)
  password              String? @db.VarChar(128)
  role                  Role[]   @default([PATIENT])
  photo                 String?
  registration_address_id Int?
  registrationAddressFk Address? @relation(fields: [registration_address_id], references: [id], name: "registrationAddressFk") 
  residence_address_id  Int?
  recidenceAddressFk    Address? @relation(fields: [residence_address_id], references: [id], name: "recidenceAddressFk") 
  createdAt             DateTime? @default(now())
  updatedAt             DateTime? @updatedAt
}